# RSACryptoApp

RSACryptoApp — приложение для macOS, реализующее асимметричное шифрование RSA. Разработано на языке Swift с использованием SwiftUI для создания интуитивного пользовательского интерфейса и фреймворка Security для криптографических операций. Программа позволяет генерировать пару ключей RSA (2048 бит), безопасно сохранять их в Keychain, а также выполнять шифрование и расшифровку текстовых данных с использованием алгоритма RSA-OAEP-SHA256.

## Основные функции
- **Генерация ключей**: Создание пары ключей RSA (открытый и закрытый) с помощью `SecKeyCreateRandomKey`.  
- **Хранение ключей**: Безопасное сохранение ключей в Keychain с уникальными тегами (например, `com.example.rsa.public`).  
- **Шифрование и расшифровка**: Поддержка шифрования текста с открытым ключом и расшифровки с закрытым ключом, результаты в формате Base64.  
- **Интерфейс**: Декларативный UI на SwiftUI с тремя экранами: `KeyGenerationView`, `EncryptionView`, `DecryptionView`.  
- **Обработка ошибок**: Проверка корректности ввода, отображение сообщений об ошибках (например, "Выберите ключ" или "Некорректный Base64").

## Скриншоты
### Экран генерации ключей
![Экран генерации ключей](screenshots/key_generation.png)  
*Описание*: Экран `KeyGenerationView` с кнопкой "Сгенерировать ключи" и статусом успешной генерации.

### Экран шифрования
![Экран шифрования](screenshots/encryption.png)  
*Описание*: Экран `EncryptionView` с выбором открытого ключа через `Picker`, полем ввода текста и результатом шифрования в Base64.

### Экран расшифровки
![Экран расшифровки](screenshots/decryption.png)  
*Описание*: Экран `DecryptionView` с выбором закрытого ключа, полем для ввода Base64-текста и результатом расшифровки.

## Технологии
- **Swift** 
- **SwiftUI**: Фреймворк для декларативного построения интерфейса (Apple, 2019).  
- **Security**: API для криптографических операций и работы с Keychain.  
- **Keychain**: Защищённое хранилище macOS с шифрованием AES-256.

### Установка
```bash
git clone https://github.com/[your-username]/RSACryptoApp.git
cd RSACryptoApp
```
1. Откройте проект в Xcode (`RSACryptoApp.xcodeproj`).  
2. Соберите и запустите приложение через Xcode (`Cmd + R`).

## Структура проекта
- `RSACrypto.swift`: Основной класс для работы с RSA (генерация, сохранение, загрузка ключей, шифрование, расшифровка).  
- `ContentView.swift`: Главный экран с навигацией.  
- `KeyGenerationView.swift`: Экран для генерации ключей.  
- `EncryptionView.swift`: Экран для шифрования текста.  
- `DecryptionView.swift`: Экран для расшифровки текста.

## Использование
1. **Генерация ключей**: На экране "Key Generation" нажмите "Сгенерировать ключи". Ключи сохраняются в Keychain.  
2. **Шифрование**: В "Encryption" выберите открытый ключ через `Picker`, введите текст, нажмите "Зашифровать". Результат отобразится в Base64.  
3. **Расшифровка**: В "Decryption" выберите закрытый ключ, вставьте Base64-текст, нажмите "Расшифровать" для получения исходного текста.
